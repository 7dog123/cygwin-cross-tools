name: Cygwin
on:
  push:
    branches:
    - master
    - 'cygport-*'
    - 'topic/**'
  workflow_dispatch:

env:
  CASE_INSENSITIVE: 1

jobs:
  cygport:
    name: cygport
    runs-on:  windows-latest
    steps:
    - name: Turn off line ending conversion in git
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - uses: actions/checkout@v1
      with:
        submodules: true
    - uses: actions/cache@v3
      with:
        path: C:\cygwin-packages
        key: cygwin-packages-${{ hashFiles('C:\cygwin-packages\**') }}
        restore-keys: cygwin-packages-
    - name: Fetch Cygwin installer
      run: |
        Invoke-WebRequest https://cygwin.com/setup-x86_64.exe -OutFile C:\setup.exe
      shell: powershell
      # installer should be cacheable
    - name: Install Cygwin
      run: |
        c:\setup.exe -qgnO -s http://mirrors.kernel.org/sourceware/cygwin/ -l C:\cygwin-packages\ -P ^
        R,^
        tar,^
        wget,^
        gcc-core,^
        gcc-g++,^
        binutils,^
        make,^
        cmake,^
        automake,^
        autoconf,^
        git,^
        patch,^
        unzip,^
        flex,^
        bison,^
        gperf,^
        help2man,^
        libtool,^
        gettext,^
        libgmp10,^
        libgmp-devel,^
        libmpfr6,^
        libmpfr-devel,^
        libmpc3,^
        libmpc-devel,^
        libncurses-devel,^
        libintl-devel,^
        python3-pip,^
        python38-devel,^
        python27-wheel,^
        python37-pip,^
        python37-setuptools,^
        python37-wheel,^
        python38-pip,^
        python38-setuptools,^
        python38-wheel,^
        python38-pygments,^
        python39-pip,^
        python39-setuptools,^
        python39-wheel
      shell: cmd
    - name: Set PATH
      run: echo "PATH=C:\cygwin64\bin;C:\cygwin64\lib\lapack;C:\cygwin64\usr\linux\{bin,lib,include};%SYSTEMROOT%\system32;" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Fixup Cygwin installation
      run: |
        bash --login
        bash -c '/usr/sbin/alternatives --set python /usr/bin/python3.8'
        bash -c '/usr/sbin/alternatives --set python3 /usr/bin/python3.8'
        bash -c '/usr/sbin/alternatives --set python3-config /usr/bin/python3.8-config'
        bash -c 'sed -i s#/usr/bin/python\$#/usr/bin/python3.9# /usr/bin/pip3.9'
        bash -c 'sed -i s@#!/bin/python\$@#!/bin/python2@ /usr/bin/bzr'
        bash -c 'git config --system --add safe.directory /cygdrive/d/a/cygport/cygport'
        bash -c 'git config --system --add safe.directory /cygdrive/d/a/cygport/cygport/data/gnuconfig'
      continue-on-error: true
      
    - name: Download and build crossing-tools
      run: |
       git clone --depth 1 --config core.autocrlf=input https://github.com/crosstool-ng/crosstool-ng.git
       cd crosstool-ng
       ./bootstrap
       ./configure --enable-local
       make
       
    - name: Building the toolchain
      run: |
       # Directories
       # Do not use a cygwin path string for WINDOWS_DIR as it will not work
       WINDOWS_DIR=C:/compile-cs
       LINUX_DIR=/usr/compile
       # Create case sensitive file system
       mkdir $WINDOWS_DIR
       mkdir $LINUX_DIR
       # Mount new filesystem
       mount $WINDOWS_DIR $LINUX_DIR -o binary,posix=1
       cp .config $LINUX_DIR
       cd $LINUX_DIR
       mkdir src
       $GITHUB_WORKSPACE/ct-ng build
       ct-ng build

